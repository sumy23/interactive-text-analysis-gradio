# -*- coding: utf-8 -*-
"""IT535_PYTHON_PROJECT_1

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10fdJ9jmH06nG50-qMTaXcv3DF3BWumbB
"""

!pip install gradio pandas numpy

import pandas as pd
import numpy as np
import gradio as gr
from collections import Counter
from sklearn.model_selection import train_test_split

url = "https://raw.githubusercontent.com/uzay00/KaVe-Egitim/master/ARGE/Sorular/1-%C4%B0seAl%C4%B1mRobotu/data.csv"
df = pd.read_csv(url)

df.columns = df.columns.str.strip().str.replace('\ufeff', '')

print("Kolonlar:", df.columns.tolist())
df.head()

X = df[['age', 'algorithm', 'gpa', 'social']].values
y = df['y'].values

def euclidean_distance(a, b):
    return np.sqrt(np.sum((a - b) ** 2))

def knn_predict(X_train, y_train, x, k=3):
    distances = []
    for i in range(len(X_train)):
        dist = euclidean_distance(X_train[i], x)
        distances.append((dist, y_train[i]))

    distances.sort(key=lambda x: x[0])
    k_nearest = [label for (_, label) in distances[:k]]
    prediction = Counter(k_nearest).most_common(1)[0][0]
    return prediction

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

def evaluate_knn(X_train, y_train, X_test, y_test, k=3):
    correct = 0
    for i in range(len(X_test)):
        pred = knn_predict(X_train, y_train, X_test[i], k)
        if pred == y_test[i]:
            correct += 1
    return correct / len(X_test)

accuracy = evaluate_knn(X_train, y_train, X_test, y_test)
print(f"Model doğruluğu: {accuracy:.2f}")

def predict(age, algorithm, gpa, social):
    try:
        x = np.array([age, algorithm, gpa, social])
        prediction = knn_predict(X_train, y_train, x, k=3)
        return f"Önerilen Pozisyon: {prediction}"
    except Exception as e:
        return f"Hata: {str(e)}"

interface = gr.Interface(
    fn=predict,
    inputs=[
        gr.Number(label="Yaş"),
        gr.Number(label="Algoritma Skoru"),
        gr.Number(label="GPA"),
        gr.Number(label="Sosyal Beceriler Skoru")
    ],
    outputs="text",
    title=f"KNN ile İşe Alım Tahmini (Doğruluk: {accuracy:.2f})",
    description="Yaş, GPA, algoritma bilgisi ve sosyal beceriye göre pozisyon tahmini yapar."
)

interface.launch()